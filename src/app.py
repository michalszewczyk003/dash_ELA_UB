# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-UUETcFD1mRyTAt8X4eMVkdaIBWocg3j
"""

import pandas as pd
# !pip install plotly.express
# !pip install dash
import plotly.express as px
import seaborn as sns
from dash import Dash, html, dcc, Output, Input

sns.set_style("whitegrid")
sns.set_theme("notebook")

# Wczytywanie bazy danych
df=pd.read_csv("graduates-institution-data.csv", sep=';', decimal=",")
df_pl=pd.read_csv("graduates-national-data.csv", sep=';', decimal=",")

# Wybieranie z bazy instytucji ważnych zmiennych i zmienianie ich typu
zmienne=["U_WWB", "U_WWZ", "U_CZAS_ETAT", "U_CZY_BEZR", "U_ROKDYP", "U_N"]
df[zmienne]= df[zmienne].astype("float")
df=df[zmienne].join(df[["U_NAZWA_UCZELNI","U_POZIOM", "U_UCZELNIA_SKROT"]])
df=df.query('U_POZIOM == "2"')
df=df.drop(columns='U_POZIOM')
df=df.sort_values("U_ROKDYP")
# Dodatkowe oznaczenie do zbioru wszystkich danych czy jakaś uczelnia jest uczelnią badawczą
lista_UNB=open("UNB.txt").read().split("\n")
df['UNB'] = df['U_NAZWA_UCZELNI'].isin(lista_UNB).astype(str)


# Wybieranie z bazy krajowej ważnych zmiennych i zmienianie ich typu
zmienne=["PL_WWB", "PL_WWZ", "PL_CZAS_ETAT", "PL_CZY_BEZR", "PL_ROKDYP",]
df_pl[zmienne]= df_pl[zmienne].astype("float")
df_pl=df_pl[zmienne].join(df_pl["PL_POZIOM"])
df_pl=df_pl.query('PL_POZIOM == "2"')
df_pl=df_pl.drop(columns='PL_POZIOM')
df_pl=df_pl.sort_values("PL_ROKDYP")

# Ustalanie wielkości dla zmiennych
size_mapping = {'True': 30, 'False': 5}

app = Dash()
server = app.server

app.layout = html.Div([
    dcc.Dropdown(df.columns.unique()[:4], 'U_WWZ', id='selector'),
    dcc.Graph(id='graph-with-slider'),
    dcc.Slider(
        min=df['U_ROKDYP'].min(),
        max=df['U_ROKDYP'].max(),
        step=None,
        value=df['U_ROKDYP'].min(),
        marks={int(year): str(int(year)) for year in df['U_ROKDYP'].unique()},
        id='year-slider'
    )
])

@app.callback(
    Output('graph-with-slider', 'figure'),
    Input('year-slider', 'value'),
    Input('selector', 'value'))

def update_figure(year, column):
    df_selected = df[df.U_ROKDYP == year]
    # Zmienne dla wielkości dla wykresu z plotly
    sizes = [size_mapping[category] for category in df_selected['UNB']]

    fig = px.scatter(df_selected, x='U_N', y=column,
                     color="UNB", size=sizes, hover_name='U_NAZWA_UCZELNI',
                     labels={"U_ROKDYP": "Rok"},
                     log_x=True)

    return fig

if __name__ == '__main__':
    app.run_server(debug=True)

